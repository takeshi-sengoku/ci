tools:
    php_code_sniffer:
        config:
            standard: "PSR2"
    php_sim:
        enabled: true
        min_mass: 16
    php_cs_fixer:
        config: { level: psr2 }
    php_pdepend:
        enabled: true
        configuration_file: null
        suffixes:
            - php
    php_analyzer:
        enabled: true
        extensions:
            - php
        dependency_paths: {  }
        path_configs: {  }
checks:
    php:
        fix_php_opening_tag: true
        remove_php_closing_tag: true
        one_class_per_file: true
        side_effects_or_types: true
        no_mixed_inline_html: true
        require_braces_around_control_structures: true
        php5_style_constructor: true
        no_global_keyword: true
        avoid_usage_of_logical_operators: true
        psr2_class_declaration: true
        no_underscore_prefix_in_properties: true
        no_underscore_prefix_in_methods: true
        blank_line_after_namespace_declaration: true
        single_namespace_per_use: true
        psr2_switch_declaration: true
        psr2_control_structure_declaration: true
        avoid_superglobals: true
        security_vulnerabilities: true
        no_exit: true
        use_self_instead_of_fqcn: true
        uppercase_constants: true
        simplify_boolean_return: true
        return_doc_comments: true
        return_doc_comment_if_not_inferrable: true
        remove_extra_empty_lines: true
        properties_in_camelcaps: true
        phpunit_assertions: true
        prefer_while_loop_over_for_loop: true
        parameter_doc_comments: true
        parameters_in_camelcaps: true
        param_doc_comment_if_not_inferrable: true
        overriding_parameter: true
        optional_parameters_at_the_end: true
        no_short_variable_names:
            minimum: '3'
        no_short_method_names:
            minimum: '3'
        no_new_line_at_end_of_file: true
        no_goto: true
        no_long_variable_names:
            maximum: '20'
        naming_conventions:
            local_variable: '^[a-z][a-zA-Z0-9]*$'
            abstract_class_name: ^Abstract|Factory$
            utility_class_name: 'Utils?$'
            constant_name: '^[A-Z][A-Z0-9]*(?:_[A-Z0-9]+)*$'
            property_name: '^[a-z][a-zA-Z0-9]*$'
            method_name: '^(?:[a-z]|__)[a-zA-Z0-9]*$'
            parameter_name: '^[a-z][a-zA-Z0-9]*$'
            interface_name: '^[A-Z][a-zA-Z0-9]*Interface$'
            type_name: '^[A-Z][a-zA-Z0-9]*$'
            exception_name: '^[A-Z][a-zA-Z0-9]*Exception$'
            isser_method_name: '^(?:is|has|should|may|supports)'
        newline_at_end_of_file: true
        more_specific_types_in_doc_comments: true
        line_length:
            max_length: '120'
        function_in_camel_caps: true
        fix_use_statements:
            remove_unused: true
            preserve_multiple: true
            preserve_blanklines: true
            order_alphabetically: true
        fix_line_ending: true
        encourage_single_quotes: true
        encourage_postdec_operator: true
        classes_in_camel_caps: true
        check_method_contracts:
            verify_interface_like_constraints: true
            verify_documented_constraints: true
            verify_parent_constraints: true
        avoid_unnecessary_concatenation: true
        avoid_todo_comments: true
        avoid_perl_style_comments: true
        avoid_multiple_statements_on_same_line: true
        avoid_fixme_comments: true
        align_assignments: true

coding_style:
    php:
        indentation:
            general:
                use_tabs: false
                size: 4
            switch:
                indent_case: true
        spaces:
            general:
                linefeed_character: newline
            before_parentheses:
                function_declaration: true
                closure_definition: true
                function_call: true
                if: true
                for: true
                while: true
                switch: true
                catch: true
                array_initializer: true
            around_operators:
                assignment: true
                logical: true
                equality: true
                relational: true
                bitwise: true
                additive: true
                multiplicative: true
                shift: true
                unary_additive: false
                concatenation: false
                negation: false
            before_left_brace:
                class: true
                function: true
                if: true
                else: true
                for: true
                while: true
                do: true
                switch: true
                try: true
                catch: true
                finally: true
            before_keywords:
                else: true
                while: true
                catch: true
                finally: true
            within:
                brackets: false
                array_initializer: false
                grouping: false
                function_call: false
                function_declaration: false
                if: false
                for: false
                while: false
                switch: false
                catch: false
                type_cast: false
            ternary_operator:
                before_condition: true
                after_condition: true
                before_alternative: true
                after_alternative: true
                in_short_version: false
            other:
                before_comma: false
                after_comma: true
                before_semicolon: false
                after_semicolon: true
                after_type_cast: true
        braces:
            classes_functions:
                class: undefined
                function: undefined
                closure: undefined
            if:
                opening: undefined
                always: true
                else_on_new_line: false
            for:
                opening: undefined
                always: true
            while:
                opening: undefined
                always: true
            do_while:
                opening: undefined
                always: true
                while_on_new_line: false
            switch:
                opening: undefined
            try:
                opening: undefined
                catch_on_new_line: false
                finally_on_new_line: false
        upper_lower_casing:
            keywords:
                general: undefined
            constants:
                true_false_null: undefined

build:
    environment:
        php:
            version: 7.1
            ini:
                'date.timezone': 'Asia/Tokyo'